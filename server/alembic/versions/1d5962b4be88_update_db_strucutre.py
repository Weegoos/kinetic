"""Update db strucutre

Revision ID: 1d5962b4be88
Revises: 
Create Date: 2024-08-30 12:44:29.744189

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '1d5962b4be88'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_events_id', table_name='events')
    op.drop_index('ix_events_name', table_name='events')
    op.drop_table('events')
    op.drop_index('ix_event_results_id', table_name='event_results')
    op.drop_table('event_results')
    op.drop_index('ix_users_id', table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('users_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('iin', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='users_pkey'),
    sa.UniqueConstraint('iin', name='users_iin_key'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_users_id', 'users', ['id'], unique=False)
    op.create_table('event_results',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('user_login', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('user_fullname', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('event_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('score', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('evaluator_login', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('evaluator_fullname', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('evaluated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['event_id'], ['events.id'], name='event_results_event_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='event_results_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='event_results_pkey')
    )
    op.create_index('ix_event_results_id', 'event_results', ['id'], unique=False)
    op.create_table('events',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('event_type', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('start_date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('end_date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('location', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('manager_login', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('manager_fullname', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('exercise_category', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('exercise_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='events_pkey')
    )
    op.create_index('ix_events_name', 'events', ['name'], unique=False)
    op.create_index('ix_events_id', 'events', ['id'], unique=False)
    # ### end Alembic commands ###
